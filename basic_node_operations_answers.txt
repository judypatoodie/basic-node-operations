1. Run the commands sort, wc and uniq on the commands.js file.
   Explain how they work and what the output was.

   A:
   - wc command.js: outputs `42     113    1102 commands.js` which tells us
     there are 42 lines, 113 words, and 1102 characters in the commands.js file.

   - sort command.js: outputs: Each line in the script in alphabetical order
     inclusive of the white spaces. The more white spaces there are at the
     beginning of the line, the higher in the alphabet it will show.
                ```
                 done(data);
                 if (err) throw err;
                break;
                break;
                commandLibrary.cat(userInputArray.slice(1));
                commandLibrary.echo(userInputArray.slice(1).join(" "));
               //we will add the functionality of echo next within the object commandLibrary
              case "cat":
              case "echo":
             const fileName = fullPath[0];
             fs.readFile(fileName, (err, data) => {
             });
            }
           process.stdout.write('\nprompt > ');
           process.stdout.write(output);
          done(userInput);
         "echo": function(userInput) {
         const command = userInputArray[0];
         const userInputArray = userInput.split(" ");
         switch (command) {
         }
        "cat": function(fullPath) {
        //parses the user input to understand which command was typed
        },
       const commandLibrary = {
       function done(output) {
       function evaluateCmd(userInput) {
       module.exports.commandLibrary = commandLibrary;
       module.exports.evaluateCmd = evaluateCmd;
       }
       }
       };
      //where we will store our commands
      //where we will store the logic of our commands
      //write out data
      const fs = require("fs");
      ```

- Uniq commands.js outputs: This sorts each line in a file and only returns
different lines. If there is a line in a file that is the same as a line above it,
uniq removes it from the output.
      ```
      const fs = require("fs");

      //write out data
       function done(output) {
           process.stdout.write(output);
           process.stdout.write('\nprompt > ');
       }

      //where we will store our commands
       function evaluateCmd(userInput) {
        //parses the user input to understand which command was typed
         const userInputArray = userInput.split(" ");
         const command = userInputArray[0];
         switch (command) {
              case "echo":
               //we will add the functionality of echo next within the object commandLibrary
                commandLibrary.echo(userInputArray.slice(1).join(" "));
                break;
              case "cat":
                commandLibrary.cat(userInputArray.slice(1));
                break;
            }
       }

      //where we will store the logic of our commands
       const commandLibrary = {
         "echo": function(userInput) {
          done(userInput);
        },
        "cat": function(fullPath) {
             const fileName = fullPath[0];
             fs.readFile(fileName, (err, data) => {
                 if (err) throw err;
                 done(data);
             });
         }

       };

       module.exports.commandLibrary = commandLibrary;
       module.exports.evaluateCmd = evaluateCmd;
      ```


2. Using the pipe (|) connect at least two commands and run it on commands.js.
Explain what the output was and why the specific data was outputted.

A:
I ran `sort commands.js | uniq | wc`  which outputted  `35     111    1077` from
the previous question when we ran wc commands.js, it outputted `42     113    1102`
which indicates that 7 lines, two words, and 25 characters were removed by the uniq command.

6. Given a string, reverse the order of characters in each word within a sentence
while maintaining the original word order and whitespace and return the string.
To improve your problem-solving experience, use the suggested functions to solve the problem.

A:

var inputArr = "I'm learning to program algorithms!";

function reverseString(arr){
  console.log(arr.split('').reverse().join('').replace(/\\/g, ''));
}

reverseString(inputArr);
